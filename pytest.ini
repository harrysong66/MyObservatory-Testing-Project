[pytest]
# Test discovery patterns
testpaths = tests
python_files = test_*.py
python_classes = Test*
python_functions = test_*

# BDD configuration
bdd_features_base_dir = tests/features

# Command line options
addopts = 
    -v
    --strict-markers
    --tb=short
    --capture=no
    --html=reports/report.html
    --self-contained-html
    --maxfail=5
    -p no:warnings

# Markers for categorizing tests
markers =
    android: Tests for Android platform
    ios: Tests for iOS platform
    api: API tests only
    mobile: Mobile app tests
    smoke: Smoke tests - critical functionality
    regression: Regression test suite
    slow: Tests that take longer to execute
    local: Tests that run on local Appium server
    docker: Tests that run on Docker Appium server

# Logging configuration
log_cli = true
log_cli_level = INFO
log_cli_format = %(asctime)s [%(levelname)8s] %(message)s
log_cli_date_format = %Y-%m-%d %H:%M:%S

log_file = reports/test_execution.log
log_file_level = DEBUG
log_file_format = %(asctime)s [%(levelname)8s] %(name)s - %(message)s
log_file_date_format = %Y-%m-%d %H:%M:%S

# Test execution options
console_output_style = progress
junit_family = xunit2

# Timeout settings (requires pytest-timeout plugin if needed)
# timeout = 300
# timeout_method = thread

# Parallel execution (requires pytest-xdist)
# addopts = -n auto
